CF::Background=[b -1]
CF::Size=[s 55]
//CF::Symmetry = [skew 30 0], [[skew 30 0 r 120]], [[skew 30 0 r 240]]
//CF::Symmetry = CF::Dihedral, 3.5, 30
//CF::Symmetry = CF::Cyclic, 10, 4, 4
CF::MinimumSize=3
startshape start// planet[a -.9 b 1]

shape start {
	blueSky[s 36]
	planet[s 29]
	atmos[x -1.5 y -15.5]
}
shape blueSky {
	SQUARE [s 1 1.008 z -1 b .85 sat .5 hue 190 a -.98]
	blueSky[s .995 r 170 h .2]
}
shape atmos {
	loop 180 [ r 11 x 3] 
		seed[]//sat .3 h 70 hue -70]
}
// PLANET VVV
shape planet {
	CIRCLE[b 1 sat .2 hue 50]
	grad[b .65 sat .4 hue 120 a -.91]
}
shape grad {
	CIRCLE [s .98 1.02]
	grad[s .995 r 170 hue -.2 sat -.006]
}

// PLANET ^^^
// CLOUDS VVV
shape seed
rule {
	cloud[s 1.5 rand(.4, 1) r rand(-20, 20) b 1 sat -1] //b rand(.7, 1)
}
rule {}

shape cloud
rule {
	poof[s 1.5 2 sat -1 a -rand(.9, 1)]
	cloud[ s rand(1) a -(rand()+.4) ]
	cloud[ s rand(.7, 1) x rand(1,-0.5) y rand(.5,-0.5 ) b rand(-.1,.2) ]
}
gS = 4 //gap size
rule .2 {
	cloud[x rand(gS,-gS) y rand(gS,-gS )]
}


//poof
shape poof
rule {
	loop 2 [s .9] CIRCLE[ b -.05 sat .1 h 27]
	go[r rand(360)]
	go[r rand(360)]
}

shape go
rule {
	oc[r rand(-90, 90)]
	go[ s rand(.8, .85) x -.05 y rand(-.2,.2)]
}
rule .1{
	go[]
	go[[x .5 r rand(-50,50) x -.5]]
}

shape oc
rule {
	TRIANGLE[ x .35 s .7 sat .1 h 50 r rand(360)]
}
rule {
	SQUARE[ x .35 s .7 sat .1 h 50  r rand(360)]
}
rule {
	CIRCLE[ x .35 s .7 sat .1 h 50  r rand(360)]
}
rule 2 {
	oc[s .5 x rand(-1,1) y rand(-1,1)]
	oc[s .5 x rand(-1,1) y rand(-1,1)] 
}
//CLOUDS ^^^

// Minimum size hack
//loop 2 [s 100] CIRCLE[s .01]